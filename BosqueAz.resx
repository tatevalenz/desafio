<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rWKQ0NtJUEjMCOfvXHy+Np//2Q==
</value>
  </data>
</root>